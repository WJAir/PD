import React from 'react';
import Content from './components/content';
import './p4.scss';

/**
 * 简洁法则
 *
 * 上一章我们讲的是减少选项，这个简洁法则就是减少视觉上的复杂程度
 *
 * 为了更方便的理解这个世界，人类会将接受到的大量信息进行过滤和简化！
 * 研究表明，我们的大脑善于将复杂的信息识别为更简单的形式，善于优先识别物体或画面的轮廓、外形、整体，善于将无意义的、抽象的、不熟悉的部分以某种共性互相联系起来组成有意义的、具象的、熟悉的事物，这将大大减少大脑处理信息的压力。也正是人类的这种近乎于本能的信息处理模式，我们的设计才具备坚实的理论性和生物性基础，所以简洁法则对我们的设计具有极大的指导意义。
 *
 * 案例1：从13年开始几乎所有手机界面都开始扁平化
 * 原来的拟物风格，几乎保留真实物品的所有细节，我们刚有说过，我们人对物体的识别其实主要是轮廓、外形。
 * 细节越多其实对我们的干扰也就越大。
 * 可以看到扁平化，机会汁保留了颜色跟轮廓，可以做到在整体界面不变的情况下，让页面显得更加的简洁。
 * 当然很多人很喜欢拟物风格，物风格可以很美，但扁平化的去掉更多细节有利于用户对图标识别。
 *
 * 案例2：去线条化
 * 去线条画最早可能在16年左右，很多网页跟APP的跟进速度区别很大，因为这个是很细微的细节。
 * 这个是微信的支付页面，从一开始的线条颜色很深，后面淡化，再去掉。
 * 线条最常见就是作为两个点击位置或者模块直接添加的，但是太多的线条会反而违背了简洁法则。
 * 现在的设计一般去掉所有能去的线条，必须做区分的情况下，使用不同的背景色代替，当然也会保留部分线条，但建议使用更浅的线条颜色，因为线条大部分时候仅用作分隔，颜色太深有点喧宾夺主。
 *
 * 总结：
 * 简洁方式方法很多，文章中还介绍邻近性原则、相似性原则、连通性原则，我就不介绍了。
 */

export default class extends React.Component<{spaceNum:number}>{
  render(){
    const max = 3;
    const spaceNum = this.props.spaceNum > max ? max : this.props.spaceNum;


    return (
      <div className={`spaceNum${spaceNum}`}>
        <h1>简洁法则</h1>
        <Content className="s1">
          <h3>为了更方便的理解这个世界，人类会将接受到的大量信息进行过滤和简化！</h3>
          <p>
          研究表明，我们的大脑善于将复杂的信息识别为更简单的形式，善于优先识别物体或画面的轮廓、外形、整体，善于将无意义的、抽象的、不熟悉的部分以某种共性互相联系起来组成有意义的、具象的、熟悉的事物，这将大大减少大脑处理信息的压力。也正是人类的这种近乎于本能的信息处理模式，我们的设计才具备坚实的理论性和生物性基础，所以简洁法则对我们的设计具有极大的指导意义。
          </p>
        </Content>
        <Content className="s2">
          <h3 style={{display: 'block'}}>案例1：从13年开始的扁平化设计浪潮</h3>
          <div className="img"></div>
          <div className="img1"></div>
        </Content>
        <Content className="s3">
          <h3 style={{display: 'block'}}>案例2：去线条化</h3>
          <div className="img">一线条感十足</div>
          <div className="img1">二淡化线条</div>
          <div className="img2">三线条滚蛋</div>
        </Content>
      </div>
    );
  }
}
